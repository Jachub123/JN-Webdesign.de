@use "sass:map";
@use "sass:math";
@import "../css/main.css";
@import "../css/normalize.css";
@import "../css/fonts.css";
@import "node_modules/bulma/sass/utilities/_all";
@import "node_modules/bulma/sass/components/_all";
@import "node_modules/bulma/sass/grid/_all";
@import "node_modules/bulma/sass/helpers/_all";
@import "node_modules/bulma/sass/layout/_all";

//Define Css in Html head with react to be able to manipulate the css directly via react.

//THEME2 Rot zu wenig Kontrast auf mobile

/* $background-color: rgb(142, 216, 216);
$linkColorHover: #ff0051;
$mainColor1: #757449;
$overlayColor: $mainColor1;
$mainColor2: #e2df9a;
$contrastColor: #ebe54d;
$contrastColorDark: #4b490b;
$linkColor: $contrastColor; */

//THEME3

/* $background-color: rgb(142, 216, 216);
$linkColorHover: #fd6e8a;
$mainColor1: #752208;
$overlayColor: #000;
$mainColor2: #7c5d4a;
$contrastColor: #fffa81;
$contrastColorDark: #3a2c22;
$linkColor: $contrastColor; */

//THEME4 Favorit

$background-color: rgb(142, 216, 216);
$linkColorHover: #ece59a;
$mainColor1: #2c3b63;
$overlayColor: $mainColor1;
$mainColor2: #adb8aa;
$contrastColor: #cf0931;
$contrastColorDark: $contrastColor;
$linkColor: $contrastColor;

//THEME5

/* $background-color: rgb(142, 216, 216);
$linkColorHover: #3bffbe;
$mainColor1: #063f3c;
$overlayColor: #303544;
$mainColor2: #b4be58;
$contrastColor: #ff00aa;
$contrastColorDark: $contrastColor;
$linkColor: $contrastColor; */

//THEME 1

/* $background-color: rgb(142, 216, 216);
$linkColorHover: #c54570;
$mainColor1: #063f3ccb;
$overlayColor: $mainColor1;
$mainColor2: #4eaaad;
$contrastColor: #ffffff;
$contrastColorDark: #606b6b;
$linkColor: $contrastColor; */

//THEME 6

/* $background-color: rgb(142, 216, 216);
$linkColorHover: #dde7a1;
$mainColor1: #83052b;
$overlayColor: black;
$mainColor2: #aa9e30;
$contrastColor: white;
$contrastColorDark: #32615d;
$linkColor: $contrastColor; */

$animationBackground1: lighten($mainColor2, 35%);
$LogoTextColor: $linkColorHover;
$paddingSm: 10px;
$paddingMd: 40px;
$navbarWidth: 250px;
$logoWidth: 150px;
$burgerMenuWidth: $logoWidth * 0.5;
$burgerMenuHeight: $burgerMenuWidth * 0.75;
$positionNavbarCloseIconCenter: $navbarWidth * 0.5 - $burgerMenuWidth * 0.5;
$headerFontsizeSm: 0.8rem;
$headerLineHeightSm: 1.8rem;
$headerFontsizeMd: 1.035rem;
$headerlineheightMd: 2.4rem;
$linkFontSize: 0.9rem;
$ratio: 1.33;
$smallDelay: 0.1s;
$moreDelay: 0.2s;

$screensize-list: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

@mixin rule-with-screensize($rule, $size) {
  #{$rule}: map.get($screensize-list, $size);
}

@mixin layout-for-screensize($size) {
  @media (min-width: map.get($screensize-list, $size)) {
    @content;
  }
}

:root {
  --font-size: 20px;
  --padding: #{$paddingSm};
  --navbar-horizontal-position: flex-end;
  --navbar-vertical-position: start;
  --navbar-position: fixed;
  --display-header-text: none;
  --navbar-display-icon: flex;
  --navbar-width: #{$navbarWidth};
  --navbar-linkContainer-flex-direction: column;
  --navbar-linkContainer-height: 50vh;
  --navbar-background-color: #{$mainColor1};
  --hover-link-color: #{$linkColor};
  --hover-underline-link: 0;
  --hover-burgermenu-color: #{$contrastColor};
  --navbar-link-column-gap: 0;
  --navbar-link-row-gap: 25%;
}

@include layout-for-screensize(md) {
  :root {
    --font-size: 30px;
    --padding: #{$paddingMd};
    --navbar-background-color: none;
    --navbar-linkContainer-flex-direction: row;
    --navbar-linkContainer-height: fit-content;
    --navbar-vertical-position: start;
    --navbar-position: static;
    --display-header-text: block;
    --navbar-display-icon: none;
    --navbar-width: fit-content;
    --navbar-height: auto;
    --navbar-link-column-gap: 1.5rem;
    --navbar-link-row-gap: 0;
  }
}

@media (pointer: coarse) {
  :root {
    --navbar-horizontal-position: flex-end;
    --navbar-vertical-position: start;
    --navbar-position: fixed;
    --navbar-display-icon: flex;
    --navbar-width: #{$navbarWidth};
    --navbar-linkContainer-flex-direction: column;
    --navbar-linkContainer-height: 50vh;
    --navbar-background-color: #{$mainColor1};
    --navbar-link-column-gap: 0;
    --navbar-link-row-gap: 21%;
  }
}

@media (hover: hover) {
  :root {
    --hover-link-color: #{$linkColorHover};
    --hover-burgermenu-color: #{$linkColorHover};
    --hover-underline-link: 100%;
  }
}

@mixin padding(
  $top: var(--padding),
  $right: var(--padding),
  $bottom: var(--padding),
  $left: var(--padding)
) {
  padding: $top $right $bottom $left;
  /* 
  $positions: (
    "top": $top,
    "right": $right,
    "bottom": $bottom,
    "left": $left,
  );

  @include layout-for-screensize(md) {
    padding: $paddingMd $paddingMd $paddingMd $paddingMd;
    @each $key, $value in $positions {
      @if $value != $paddingSm {
        padding-$key: $value; <--- fill in #{key} instead of $key
      }
    }
  } */
}

@mixin logoSizes-for-big-screens(
  $width: null,
  $height: null,
  $navbarPositionTop: null,
  $centerCloseIcon: null,
  $burgerMenuPositionRight: null
) {
  @if $width and $height {
    width: $width;
    height: $height;
    @include layout-for-screensize(md) {
      width: $width * $ratio;
      height: $height * $ratio;
    }
  } @else if $width {
    width: $width;
    @include layout-for-screensize(md) {
      width: $width * $ratio;
    }
  } @else if $height {
    height: $height;
    @include layout-for-screensize(md) {
      height: $height * $ratio;
    }
  } @else if $burgerMenuPositionRight {
    right: $burgerMenuPositionRight;
    @include layout-for-screensize(md) {
      right: $burgerMenuPositionRight * $ratio;
    }
  } @else if $navbarPositionTop {
    margin-top: $navbarPositionTop + 2 * $paddingMd;
    @include layout-for-screensize(md) {
      margin-top: $navbarPositionTop * $ratio + 2 * $paddingMd;
    }
    @include layout-for-screensize(md) {
      margin-top: 0;
    }
    @media (pointer: coarse) {
      margin-top: $navbarPositionTop + 2 * $paddingSm;
      @include layout-for-screensize(md) {
        margin-top: $navbarPositionTop + 2 * $paddingMd;
      }
    }
  } @else {
    content: "add at least one parameter to logosize mixin";
  }
}

@keyframes fixTie {
  0% {
    offset-path: path("M1,2");
  }
  75% {
    offset-path: path("M0,0");
  }
  90% {
    offset-path: path("M0,1");
  }
  100% {
    offset-path: path("M1,2");
  }
}

.fixTie {
  animation: fixTie 0.9s infinite;
}

@keyframes shakeHands {
  0% {
    offset-path: path("M0,0");
  }
  25% {
    offset-path: path("M0,1");
  }
  50% {
    offset-path: path("M0,2");
  }
  75% {
    offset-path: path("M0,1");
  }
  100% {
    offset-path: path("M0,0");
  }
}

@keyframes vibrate {
  0% {
    offset-path: path("M0,0");
  }
  5% {
    offset-path: path("M1,-1");
  }
  7% {
    offset-path: path("M-1,1");
  }
  10% {
    offset-path: path("M-1,-1");
  }
  12% {
    offset-path: path("M1,1");
  }
  15% {
    offset-path: path("M-1,1");
  }
  15% {
    offset-path: path("M-1,-1");
  }
  20% {
    offset-path: path("M1,1");
  }
  100% {
    offset-path: path("M1,1");
  }
}

@keyframes flyInTop {
  0% {
    offset-path: path("M0,-1600");
  }

  100% {
    offset-path: path("M0,0");
  }
}
@keyframes flyInSide {
  0% {
    offset-path: path("M-1600,0");
  }

  100% {
    offset-path: path("M0,0");
  }
}

@keyframes rotate {
  0% {
    transform: rotate(-360deg);
  }
  50% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes sizing {
  0% {
    width: 10%;
    height: 10%;
  }

  100% {
    @include layout-for-screensize(md) {
      width: $logoWidth * $ratio;
    }
    width: $logoWidth;
    height: 100%;
  }
}

@keyframes FlyInFast {
  0% {
    margin-top: -80px;
  }

  45% {
    margin-top: -20px;
  }
}

@keyframes delayAnimation {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 0;
  }
}

@keyframes rollToRight {
  0% {
    margin-left: -400px;
    transform: rotate(0deg);
  }

  100% {
    margin-left: 0;
    transform: rotate(360deg);
  }
}

.rollToRight {
  animation: rollToRight 2s;
}

@keyframes rollToLeft {
  0% {
    margin-right: -400px;
    transform: rotate(360deg);
  }

  100% {
    margin-right: 0;
    transform: rotate(0deg);
  }
}

.rollToLeft {
  animation: rollToLeft 2s;
}

@keyframes bounceTop {
  0% {
    margin-top: -350px;
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
  }
  28% {
    margin-top: -25px;
  }
  30% {
    margin-top: 25px;
    height: 250px;
    width: 250px;
  }
  35% {
    margin-top: 25px;
    height: 200px;
  }
  37% {
    margin-top: -20px;
    width: 250px;
    height: 250px;
  }
  41% {
    margin-top: -90px;
  }
  47% {
    margin-top: -115px;
  }
  54% {
    margin-top: -130px;
  }
  72% {
    margin-top: -134px;
  }
  85% {
    margin-top: -126px;
  }
  99% {
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
  }
  100% {
    margin-top: 0;
    position: static;
  }
}

.bounceTop {
  animation: bounceTop 2s linear;
}

@keyframes positionAbsolute {
  0% {
    position: static;
  }
  99% {
    position: static;
  }

  100% {
    position: absolute;
  }
}

.positionAbsolute {
  animation: positionAbsolute 2s linear;
}

@keyframes fadeSvgBackground {
  0% {
    fill: white;
  }

  100% {
    fill: $animationBackground1;
  }
}

.fadeSvgBackground {
  animation: fadeSvgBackground 4s;
}

@keyframes rightCurtain {
  0% {
    margin-left: 100vw;
  }

  100% {
    margin-right: 0;
  }
}

.rightCurtain {
  animation: rightCurtain 4s;
}

@keyframes leftCurtain {
  0% {
    margin-left: -100vw;
  }

  100% {
    margin-left: 0;
  }
}

.leftCurtain {
  animation: leftCurtain 4s;
}

.animationContainer {
  position: relative;
}

@keyframes fadeToWhite {
  0% {
    color: black;
  }
  50% {
    color: black;
  }
  80% {
    color: $contrastColorDark;
  }
  100% {
    color: white;
  }
}

.fadeToWhite {
  animation: fadeToWhite 4s;
}

.hiddenSvg {
  opacity: 0;
  position: absolute;
}

.mainLogoLink {
  svg#e32345ba-7969-4b40-9cd7-e7b879a508ab {
    overflow: visible;
    animation: sizing 1.5s;
  }
}

/* .a8f6c171-b2aa-42b2-a7ec-256ed9f005a2 {
  fill: $mainColor1;
  animation: flyInTop 1.5s;
}
.f8d7a943-5add-4d34-999c-90da43c4468a {
  fill: $linkColorHover;
  animation: flyInSide 1.5s;
}
.f532e9b0-bc36-4e9e-b61e-1a39f5d410ff {
  fill: $contrastColor;
  animation: rotate 1.5s;
}
 */

.a8f6c171-b2aa-42b2-a7ec-256ed9f005a2 {
  fill: $mainColor1;
  animation: flyInTop 1.5s;
}
.f8d7a943-5add-4d34-999c-90da43c4468a {
  fill: $mainColor2;
  animation: flyInSide 1.5s;
}
.f532e9b0-bc36-4e9e-b61e-1a39f5d410ff {
  fill: $linkColorHover;
  > * {
    animation: rotate 1.5s linear;
  }
}

#Layer_1 {
  .cls-1,
  .cls-11 {
    fill: #f4bcb0;
  }
  .hand1,
  .cls-8,
  .cls-9,
  .cls-10 {
    animation-duration: 0.9s;
    animation-name: fixTie;
    animation-iteration-count: infinite;
  }
  .cls-2 {
    fill: $mainColor1;
  }
  .cls-11,
  .cls-12,
  .cls-2,
  .cls-3,
  .cls-4,
  .cls-8,
  .cls-9 {
    stroke: #000;
  }
  .cls-12 {
    fill: $linkColorHover;
  }
  .cls-10,
  .cls-11,
  .cls-2,
  .cls-3,
  .cls-4,
  .cls-5,
  .cls-8,
  .cls-9 {
    stroke-miterlimit: 10;
  }
  .cls-10,
  .cls-3 {
    fill: none;
  }
  .cls-4,
  .cls-7 {
    fill: #fff;
  }
  .cls-5 {
    stroke: #fff;
  }
  .cls-6 {
    fill: #753c30;
  }
  .cls-8 {
    fill: $linkColorHover;
  }
  .cls-9 {
    fill: $linkColorHover;
  }
  .cls-10 {
    stroke: $linkColorHover;
  }
}

.customls-1 {
  fill: #fff;
}
.customls-1,
.customls-2 {
  stroke: #000;
  stroke-miterlimit: 10;
}
.customls-2 {
  fill: #ffcdc0;
}
.customls-3 {
  fill: none;
  stroke: #000;
  stroke-miterlimit: 10;
}
.circle {
  fill: $animationBackground1;
  stroke: #000;
  & ~ .customls-1,
  & ~ .customls-2,
  & ~ .customls-3 {
    animation-duration: 0.6s;
    animation-name: shakeHands;
    animation-iteration-count: infinite;
  }
}
.customls-7 {
  fill: none;
  stroke: #000;
}
.customls-4 {
  fill: white;
  stroke: #000;
}
circle {
  & ~ .customls-4,
  & ~ .customls-5,
  & ~ .customls-6,
  & ~ .customls-7 {
    animation-duration: 1s;
    animation-name: vibrate;
    animation-iteration-count: infinite;
  }
}
.customls-5 {
  fill: #b9dded;
}
html {
  font-size: var(--font-size);
}

body {
  font-family: "Louis_George_Cafe";
}

span,
pre {
  font-family: Louis_George_Cafe_Light;
}

.column-text {
  position: relative;
}

.column {
  svg {
    max-width: 250px;
  }
  .column-text {
    max-width: 450px;
    margin-left: auto;
    margin-right: auto;
  }
}

button {
  border: 0;
  background-color: transparent;
}
.header-grid .headerLogoWrapper + .CenterHeaderNav .headerNavContainer nav ul {
  .linkLiElement {
    &:first-child {
      animation: FlyInFast 2s;
    }
    &:nth-child(2) {
      animation: delayAnimation $smallDelay, FlyInFast 2s $smallDelay;
    }
    &:nth-child(3) {
      animation: delayAnimation $moreDelay, FlyInFast 2s $moreDelay;
    }
    display: flex;
    justify-content: center;
    a {
      position: relative;
      display: flex;
      width: fit-content;
      flex-direction: column;
      justify-content: center;
      text-decoration: none;
      font-size: $linkFontSize;
      color: transparent;
      p {
        position: absolute;
        top: 0;
        left: 0;
        color: $linkColorHover;
        margin: 0;
        transition: 0.3s ease;
      }
      span {
        position: absolute;
        top: 0;
        right: 0;
        opacity: 0;
        color: $contrastColor;
        transition-delay: 0.4s;
      }
      &::after {
        content: attr(linktext);
        z-index: 2;
        position: absolute;
        top: 0;
        left: 0;
        width: 0;
        overflow: hidden;
        white-space: nowrap;
        color: $contrastColor;
        transition: width 0.2s ease;
        transition-delay: 0.2s;
      }
      &::before {
        content: attr(linktext);
        z-index: 1;
        position: absolute;
        top: 0;
        left: 0;
        width: 0;
        overflow: hidden;
        white-space: nowrap;
        color: $mainColor1;
        transition: width 0.4s ease;
      }
      &:hover {
        p {
          opacity: 0.4;
        }
        span {
          opacity: 1;
        }
        &::after {
          width: 100%;
        }
        &::before {
          width: 100%;
        }
        .hoverBorder {
          width: var(--hover-underline-link);
        }
      }
    }
  }
}
.hoverBorder {
  width: 0;
  height: 10px;
  background-color: $mainColor1;
  transition: width 0.4s ease-in-out;
}

.drop-shadow {
  filter: drop-shadow(1px 2px 3px rgba(0, 0, 0, 0.3));
}
.pageheader {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: left;
  background-attachment: fixed;
  min-height: 100vh;
  position: relative;
  .overlay {
    position: absolute;
    height: 100%;
    width: 100%;
    background-color: $overlayColor;
    opacity: 0.8;
  }
  .overlay2 {
    position: absolute;
    height: 100%;
    width: 100%;
    background-color: black;
    opacity: 0.5;
  }
  .pageHeaderWrapper {
    @include padding($right: 0);
    .headMediumCaption {
      font-variant: small-caps;
      font-size: $headerFontsizeMd;
      line-height: $headerlineheightMd;
      color: $mainColor2;
      letter-spacing: 0.15rem;
    }

    .headSmallCaption {
      font-size: $headerFontsizeSm;
      line-height: $headerLineHeightSm;
      color: $mainColor2;
      letter-spacing: 0.035rem;
      font-weight: 500;
    }
  }
}

header {
  position: absolute;
  z-index: 1;
  width: 100%;
}

.header-grid {
  width: 100%;
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: var(--navbar-vertical-position);
  @include padding($left: 0);
  transition: margin 0.4s ease;
  &.open {
    .CenterHeaderNav {
      .headerNavContainer {
        nav {
          right: 0;
          background-color: var(--navbar-background-color);
          + .burgerMenu {
            position: relative;
            .line {
              margin: 0;
            }
            .line1 {
              transform: rotate(-45deg);
              width: 100%;
            }
            .line2 {
              opacity: 0;
              height: 0;
            }
            .line3 {
              opacity: 0;
              height: 0;
            }
            .line4 {
              transform: rotate(45deg);
              width: 100%;
            }
          }
        }
      }
    }
  }
  .headerLogoWrapper {
    grid-column: 1;
    display: flex;
    align-items: center;
    @include padding($top: 0, $right: 0, $bottom: 0);
    transition: margin-right 0.4s;
    .mainLogoLink {
      margin-right: 10px;
      width: fit-content;
      height: min-content;
      &:hover {
        opacity: 1;
      }
      svg {
        @include logoSizes-for-big-screens($width: $logoWidth);
        height: auto;
      }
    }
    span {
      letter-spacing: 3px;
      font-style: italic;
    }
  }
  .CenterHeaderNav {
    display: flex;
    grid-column: 2;
    justify-content: flex-end;
    .headerNavContainer {
      display: grid;
      width: fit-content;
      height: fit-content;
      transition-property: right;
      transition-property: margin;
      transition: 0.4s ease;
      &.deactivateTransition {
        transition: margin-right 0s ease;
      }
      .burgerMenu {
        display: var(--navbar-display-icon);
        flex-direction: column;
        @include logoSizes-for-big-screens($width: $burgerMenuWidth);
        @include logoSizes-for-big-screens($height: $burgerMenuHeight);
        justify-content: center;
        cursor: pointer;
        color: $contrastColor;
        .line {
          margin-bottom: 21%;
          &:last-child {
            margin-bottom: 0;
          }
        }
        &:hover .line {
          background-color: var(--hover-burgermenu-color);
        }
        .line {
          background-color: $contrastColor;
          height: 2px;
          transition: all 0.4s ease, opacity 0.3s, height 0.4s;
        }
        .line1 {
          width: 100%;
        }
        .line2 {
          width: 75%;
        }
        .line3 {
          width: 100%;
        }
        .line4 {
          width: 75%;
        }
      }
      nav {
        display: flex;
        justify-content: center;
        position: var(--navbar-position);
        top: 0;
        right: -$navbarWidth;
        width: var(--navbar-width);
        height: 100%;
        transition-property: right;
        transition-property: width;
        transition: 0.4s ease;
        ul {
          display: flex;
          justify-content: center;
          flex-direction: var(--navbar-linkContainer-flex-direction);
          @include logoSizes-for-big-screens(
            $navbarPositionTop: $burgerMenuHeight
          );
          li {
            height: 100%;
            max-height: 150px;
            margin-right: var(--navbar-link-column-gap);
            margin-bottom: var(--navbar-link-row-gap);
            &:last-child {
              margin-right: 0;
            }
          }
        }
      }
    }
  }
}

.contentBox {
  @include rule-with-screensize(max-width, xl);
  margin-right: auto;
  margin-left: auto;
}

.responsiveWrapper {
  @include padding();
  min-height: 100vh;
}

h2 {
  color: $contrastColorDark;
}

.sectionResponsive {
  overflow: hidden;
  h1 {
    color: #000;
  }
  h2 {
    font-family: Louis_George_Cafe_Light;
    margin-bottom: 3rem;
  }
  .column-text {
    font-size: 0.65rem;

    & h2 {
      font-size: 1.25rem;
      margin-bottom: 0;
      height: 112.5px;
    }
  }
  text-align: center;
}
.dividingParallax {
  h1,
  h2 {
    margin-bottom: 0;
  }
  h1 {
    &:first-child {
      display: flex;
      justify-content: center;
      align-items: flex-end;
    }
    &:last-child {
      display: flex;
      justify-content: center;
      align-items: flex-start;
    }
  }
  height: 100vh;
  position: relative;
  overflow: hidden;
  .blueTriangle {
    width: 0;
    height: 0;
    border-top: 100vh solid transparent;
    border-bottom: 100vh solid transparent;
    border-left: 100vw solid $mainColor2;
    position: absolute;
  }
  .greenTriangle {
    width: 0;
    height: 0;
    border-top: 100vh solid transparent;
    border-bottom: 100vh solid transparent;
    border-right: 100vw solid $linkColorHover;
    position: absolute;
    top: -100vh;
  }
  .huge {
    height: 44vh;
    color: white;
    font-size: clamp(4rem, 25vw, 9rem);
    font-weight: normal;
  }
  .mini {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 12vh;
    color: white;
    font-size: 1rem;
    font-family: Louis_George_Cafe_Light;
    font-weight: normal;
  }
  .curtainSlogan {
    position: absolute;
    width: 100%;
  }
}
